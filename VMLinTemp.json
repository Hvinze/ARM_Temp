{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "allowedValues": [
                "eastus",
                "eastus2",
                "southcentralus",
                "westus2",
                "westus3",
                "australiaeast",
                "southeastasia",
                "northeurope",
                "swedencentral",
                "uksouth",
                "westeurope",
                "centralus",
                "northcentralus",
                "westus",
                "southafricanorth",
                "centralindia",
                "eastasia",
                "japaneast",
                "koreacentral",
                "canadacentral",
                "francecentral",
                "germanywestcentral",
                "norwayeast",
                "switzerlandnorth",
                "uaenorth",
                "brazilsouth",
                "westcentralus",
                "australiacentral",
                "australiasoutheast",
                "japanwest",
                "koreasouth",
                "southindia",
                "westindia",
                "canadaeast",
                "ukwest"
            ],
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "virtualMachineName": {
            "type": "string",
            "defaultValue": "demo-vm",
            "metadata": {
                "description": "Name of the virtual machine."
            }
        },
        "OSVersion": {
            "type": "string",
            "defaultValue": "Canonical:UbuntuServer:18.04-LTS:latest",
            "allowedValues": [
                "Canonical:UbuntuServer:16.04-LTS:latest",
                "Canonical:UbuntuServer:18.04-LTS:latest",
                "Canonical:UbuntuServer:20.04-LTS:latest"
            ],
            "metadata": {
                "description": "The Ubuntu version for the VM."
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_B1s",
            "allowedValues": [
                "Standard_B1ms",
                "Standard_B1s",
                "Standard_B2ms",
                "Standard_B2s",
                "Standard_B4ms",
                "Standard_B8ms",
                "Standard_D1",
                "Standard_D11",
                "Standard_D11_v2",
                "Standard_D12",
                "Standard_D12_v2",
                "Standard_D13",
                "Standard_D13_v2",
                "Standard_D14",
                "Standard_D14_v2",
                "Standard_D15_v2",
                "Standard_D16_v3",
                "Standard_D16s_v3",
                "Standard_D1_v2",
                "Standard_D2",
                "Standard_D2_v2",
                "Standard_D2_v3",
                "Standard_D2s_v3",
                "Standard_D3",
                "Standard_D32_v3",
                "Standard_D32s_v3",
                "Standard_D3_v2",
                "Standard_D4",
                "Standard_D4_v2",
                "Standard_D4_v3",
                "Standard_D4s_v3",
                "Standard_D5_v2",
                "Standard_D64_v3",
                "Standard_D64s_v3",
                "Standard_D8_v3",
                "Standard_D8s_v3",
                "Standard_DS1",
                "Standard_DS11",
                "Standard_DS11_v2",
                "Standard_DS12",
                "Standard_DS12_v2",
                "Standard_DS13",
                "Standard_DS13-2_v2",
                "Standard_DS13-4_v2",
                "Standard_DS13_v2",
                "Standard_DS14",
                "Standard_DS14-4_v2",
                "Standard_DS14-8_v2",
                "Standard_DS14_v2",
                "Standard_DS15_v2",
                "Standard_DS1_v2",
                "Standard_DS2",
                "Standard_DS2_v2",
                "Standard_DS3",
                "Standard_DS3_v2",
                "Standard_DS4",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_E16_v3",
                "Standard_E16s_v3",
                "Standard_E2_v3",
                "Standard_E2s_v3",
                "Standard_E32-16_v3",
                "Standard_E32-8s_v3",
                "Standard_E32_v3",
                "Standard_E32s_v3",
                "Standard_E4_v3",
                "Standard_E4s_v3",
                "Standard_E64-16s_v3",
                "Standard_E64-32s_v3",
                "Standard_E64_v3",
                "Standard_E64s_v3",
                "Standard_E8_v3",
                "Standard_E8s_v3",
                "Standard_F1",
                "Standard_F16",
                "Standard_F16s",
                "Standard_F16s_v2",
                "Standard_F1s",
                "Standard_F2",
                "Standard_F2s",
                "Standard_F2s_v2",
                "Standard_F32s_v2",
                "Standard_F4",
                "Standard_F4s",
                "Standard_F4s_v2",
                "Standard_F64s_v2",
                "Standard_F72s_v2",
                "Standard_F8",
                "Standard_F8s",
                "Standard_F8s_v2",
                "Standard_G1",
                "Standard_G2",
                "Standard_G3",
                "Standard_G4",
                "Standard_G5",
                "Standard_GS1",
                "Standard_GS2",
                "Standard_GS3",
                "Standard_GS4",
                "Standard_GS4-4",
                "Standard_GS4-8",
                "Standard_GS5",
                "Standard_GS5-16",
                "Standard_GS5-8",
                "Standard_H16",
                "Standard_H16m",
                "Standard_H16mr",
                "Standard_H16r",
                "Standard_H8",
                "Standard_H8m",
                "Standard_L16s",
                "Standard_L32s",
                "Standard_L4s",
                "Standard_L8s",
                "Standard_M128-32ms",
                "Standard_M128-64ms",
                "Standard_M128ms",
                "Standard_M128s",
                "Standard_M64-16ms",
                "Standard_M64-32ms",
                "Standard_M64ms",
                "Standard_M64s",
                "Standard_NC12",
                "Standard_NC12s_v2",
                "Standard_NC12s_v3",
                "Standard_NC24",
                "Standard_NC24r",
                "Standard_NC24rs_v2",
                "Standard_NC24rs_v3",
                "Standard_NC24s_v2",
                "Standard_NC24s_v3",
                "Standard_NC6",
                "Standard_NC6s_v2",
                "Standard_NC6s_v3",
                "Standard_ND12s",
                "Standard_ND24rs",
                "Standard_ND24s",
                "Standard_ND6s",
                "Standard_NV12",
                "Standard_NV24",
                "Standard_NV6"
            ],
            "metadata": {
                "description": "Size of the virtual machine."
            }
        },
        "OSdisktype": {
            "type": "string",
            "defaultValue": "StandardSSD_LRS",
            "allowedValues": [
                "StandardSSD_LRS",
                "PremiumSSD_LRS",
                "StandardHDD_LRS"
            ],
            "metadata": {
                "description": "Type for the OS Disk in Virtual Machine"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "demo-VNet",
            "metadata": {
                "description": "Name for the Virtual Network to create."
            }
        },
        "VNetAddress": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "CIDR for the Virtual Network."
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "Subnet",
            "metadata": {
                "description": "Name for the Virtual Network's Subnet."
            }
        },
        "subnetaddress": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "CIDR for the Virtual Network's Subnet."
            }
        },
        "networkInterfaceName": {
            "type": "string",
            "defaultValue": "demo-Nic",
            "metadata": {
                "description": "Name for the Network Interface to create."
            }
        },
        "nsgNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Specify whether to create a new or existing Network Security Group for the VM."
            }
        },
        "NetworkSecurityGroupName": {
            "type": "string",
            "defaultValue": "demo-NSG",
            "metadata": {
                "description": "Name of the existing NSG"
            }
        },
        "publicIpAddressName": {
            "type": "string",
            "defaultValue": "demo-PublicIP",
            "metadata": {
                "description": "Name for the Public IP used to access the Virtual Machine."
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "SSHPublicKey": {
            "type": "string",
            "metadata": {
                "description": "SSH Key for the Virtual Machine."
            }
        },
        "autoShutdownStatus": {
            "type": "string",
            "defaultValue": "Enabled",
            "allowedValues": [
                "Enabled",
                "Disabled"
            ],
            "metadata": {
                "description": "Status for autoshutdown for Virtual Machine"
            }
        },
        "autoShutdownTime": {
            "type": "string",
            "defaultValue": "08:00",
            "metadata": {
                "description": "Time for autoshutdown for Virtual Machine in Coordinated Universal Time(UTC)"
            }
        },
        "autoShutdownNotificationStatus": {
            "type": "string",
            "defaultValue": "Enabled",
            "allowedValues": [
                "Enabled",
                "Disabled"
            ],
            "metadata": {
                "description": "Status for autoshutdown notification on mail"
            }
        },
        "autoShutdownNotificationEmail": {
            "type": "string",
            "defaultValue": "demo@yash.com",
            "metadata": {
                "description": "Mail for autoshutdown notification"
            }
        },
        "ServiceOwner": {
            "type": "String",
            "metadata": {
                "description": "The owner of resource."
            }
        },
        "Type": {
            "type": "String",
            "metadata": {
                "description": "The type of the resource."
            }
        },
        "Environment": {
            "allowedValues": [
                "dev",
                "test",
                "pre-prod",
                "prod"
            ],
            "type": "String",
            "metadata": {
                "description": "The environment of the resource."
            }
        }
    },
    "variables": {
        "nsgId": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
        "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
        "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
                "publicKeys": [
                    {
                        "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                        "keyData": "[parameters('SSHPublicKey')]"
                    }
                ]
            }
        }
    },
    "resources": [
        {
            "name": "[parameters('networkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2021-03-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName'))]"

                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            },
            "tags": {
                "Owner": "[parameters('ServiceOwner')]",
                "Type": "[parameters('Type')]",
                "Enviornment": "[parameters('Environment')]"
            }
        },
        {
            "condition": "[equals(parameters('nsgNewOrExisting'), 'new')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "name": "[parameters('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-22",
                        "properties": {
                            "priority": 1000,
                            "access": "Allow",
                            "direction": "Inbound",
                            "destinationPortRange": "22",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            },
            "tags": {
                "Owner": "[parameters('ServiceOwner')]",
                "Type": "[parameters('Type')]",
                "Enviornment": "[parameters('Environment')]"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [ "[parameters('VNetAddress')]" ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetaddress')]"
                        }
                    }
                ]
            },
            "tags": {
                "Owner": "[parameters('ServiceOwner')]",
                "Type": "[parameters('Type')]",
                "Enviornment": "[parameters('Environment')]"
            }
        },
        {
            "name": "[parameters('publicIpAddressName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2019-02-01",
            "location": "[parameters('location')]",
            "properties": {
                "publicIpAllocationMethod": "Dynamic"
            },
            "sku": {
                "name": "Basic"
            },
            "tags": {
                "Owner": "[parameters('ServiceOwner')]",
                "Type": "[parameters('Type')]",
                "Enviornment": "[parameters('Environment')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-07-01",
            "name": "[parameters('virtualMachineName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "arn": "[parameters('OSVersion')]"                        
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('SSHPublicKey')]",
                    "linuxConfiguration": "[variables('linuxConfiguration')]"
                }
            },
            "tags": {
                "Owner": "[parameters('ServiceOwner')]",
                "Type": "[parameters('Type')]",
                "Enviornment": "[parameters('Environment')]"
            }
        },
        {
            "name": "[concat('shutdown-computevm-', parameters('virtualMachineName'))]",
            "type": "Microsoft.DevTestLab/schedules",
            "apiVersion": "2018-09-15",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
            ],
            "properties": {
                "status": "[parameters('autoShutdownStatus')]",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "[parameters('autoShutdownTime')]"
                },
                "timeZoneId": "UTC",
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]",
                "notificationSettings": {
                    "status": "[parameters('autoShutdownNotificationStatus')]",
                    "timeInMinutes": "30",
                    "emailRecipient": "[parameters('autoShutdownNotificationEmail')]"
                }
            },
            "tags": {
                "Owner": "[parameters('ServiceOwner')]",
                "Type": "[parameters('Type')]",
                "Enviornment": "[parameters('Environment')]"
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        },
        "sshCommand": {
            "type": "string",
            "value": "[format('ssh {0}@{1}', parameters('adminUsername'), reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))))]"
        }
    }
}